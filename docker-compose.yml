version: "3.9"

services:
    postgres:
        image: postgres:16
        container_name: image-processor-postgres
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: image_processor_db
        ports:
            - "5433:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5

    minio:
        image: minio/minio:latest
        container_name: minio
        ports:
            - "9000:9000"
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        command: server /data
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - minio_data:/data

    kafka:
        image: bitnami/kafka:latest
        ports:
            - "9092:9092"
        container_name: image-processor-kafka
        environment:
            - KAFKA_ENABLE_KRAFT=yes
            - KAFKA_CFG_NODE_ID=0
            - KAFKA_CFG_PROCESS_ROLES=broker,controller
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@image-processor-kafka:9093
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
        healthcheck:
            test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "image-processor-kafka:9092", "--list" ]
            interval: 10s
            timeout: 5s
            retries: 10
        volumes:
            - kafka_data:/bitnami/kafka

    migrator:
        image: migrate/migrate:latest
        container_name: image-processor-migrator
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - ./migrations:/migrations
        entrypoint: [
            "migrate",
            "-path", "/migrations",
            "-database", "postgres://postgres:postgres@postgres:5432/image_processor_db?sslmode=disable",
            "up"
        ]
        restart: "on-failure"


volumes:
    postgres_data:
    kafka_data:
    minio_data:
